[{"/home/alice/Desktop/JavaProjects/studentList/src/frontend/src/index.js":"1","/home/alice/Desktop/JavaProjects/studentList/src/frontend/src/App.js":"2","/home/alice/Desktop/JavaProjects/studentList/src/frontend/src/reportWebVitals.js":"3","/home/alice/Desktop/JavaProjects/studentList/src/frontend/src/client.js":"4","/home/alice/Desktop/JavaProjects/studentList/src/frontend/src/StudentDrawerForm.js":"5","/home/alice/Desktop/JavaProjects/studentList/src/frontend/src/Notification.js":"6"},{"size":535,"mtime":1677053672293,"results":"7","hashOfConfig":"8"},{"size":6672,"mtime":1678943977383,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1677053672373,"results":"10","hashOfConfig":"8"},{"size":736,"mtime":1678665602750,"results":"11","hashOfConfig":"8"},{"size":3934,"mtime":1678801996550,"results":"12","hashOfConfig":"8"},{"size":782,"mtime":1678801954553,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1meb3hn",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alice/Desktop/JavaProjects/studentList/src/frontend/src/index.js",[],[],[],"/home/alice/Desktop/JavaProjects/studentList/src/frontend/src/App.js",["34","35","36","37","38"],[],"/home/alice/Desktop/JavaProjects/studentList/src/frontend/src/reportWebVitals.js",[],[],"/home/alice/Desktop/JavaProjects/studentList/src/frontend/src/client.js",[],[],"/home/alice/Desktop/JavaProjects/studentList/src/frontend/src/StudentDrawerForm.js",["39"],[],"import {Drawer, Input, Col, Select, Form, Row, Button} from 'antd';\nimport {addNewStudent } from \"./client.js\";\nimport {useState} from 'react';\nimport React from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport {successNotification, errorNotification} from \"./Notification\";\n\nconst {Option} = Select;\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nfunction StudentDrawerForm({showDrawer, setShowDrawer,fetchStudents}) {\n    const onCLose = () => setShowDrawer(false);\n    const [submitting, setSubmitting] = useState(false);\n\n    const onFinish = values => {\n        //alert(JSON.stringify(values, null, 2));\n        setSubmitting(true);\n        console.log(JSON.stringify(values, null, 2));\n        addNewStudent(values).\n        \tthen(()=> {\n\t        \tconsole.log(\"Student added\");\n\t        \tonCLose();\n\t        \tsuccessNotification(\"Student successfully added\",\n\t        \t\t`${values.name} is added to the system`);\n\t        \tfetchStudents();\n\n\t        }\n\t\t    ).catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\terr.response.json().then(res=>\n\t\t\t\terrorNotification(\n\t\t\t\t\t\"There was an issue\",\n\t\t\t\t\t`${res.message} [${res.status}] [${res.error}]`,\n\t\t\t\t\t\"bottomLeft\"\n\t\t\t\t)\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t})\n\t\t    .finally(()=> {\n\t\t    setSubmitting(false);\n\t\t    }\n\t\t    )\n    };\n\n    const onFinishFailed = errorInfo => {\n        alert(JSON.stringify(errorInfo, null, 2));\n    };\n\n    return <Drawer\n        title=\"Create new student\"\n        width={720}\n        onClose={onCLose}\n        visible={showDrawer}\n        bodyStyle={{paddingBottom: 80}}\n        footer={\n            <div\n                style={{\n                    textAlign: 'right',\n                }}\n            >\n                <Button onClick={onCLose} style={{marginRight: 8}}>\n                    Cancel\n                </Button>\n            </div>\n        }\n    >\n        <Form layout=\"vertical\"\n              onFinishFailed={onFinishFailed}\n              onFinish={onFinish}\n              hideRequiredMark>\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"name\"\n                        label=\"Name\"\n                        rules={[{required: true, message: 'Please enter student name'}]}\n                    >\n                        <Input placeholder=\"Please enter student name\"/>\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"email\"\n                        label=\"Email\"\n                        rules={[{required: true, message: 'Please enter student email'}]}\n                    >\n                        <Input placeholder=\"Please enter student email\"/>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"gender\"\n                        label=\"gender\"\n                        rules={[{required: true, message: 'Please select a gender'}]}\n                    >\n                        <Select placeholder=\"Please select a gender\">\n                            <Option value=\"MALE\">MALE</Option>\n                            <Option value=\"FEMALE\">FEMALE</Option>\n                            <Option value=\"OTHER\">OTHER</Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={12}>\n                    <Form.Item >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n\t\t\t  {submitting && <Spin indicator={antIcon} />}\n\t\t\t</Row>\n        </Form>\n    </Drawer>\n}\n\nexport default StudentDrawerForm;","/home/alice/Desktop/JavaProjects/studentList/src/frontend/src/Notification.js",[],[],{"ruleId":"40","severity":1,"message":"41","line":8,"column":10,"nodeType":"42","messageId":"43","endLine":8,"endColumn":32},{"ruleId":"40","severity":1,"message":"44","line":11,"column":70,"nodeType":"42","messageId":"43","endLine":11,"endColumn":73},{"ruleId":"40","severity":1,"message":"45","line":116,"column":9,"nodeType":"42","messageId":"43","endLine":116,"endColumn":21},{"ruleId":"40","severity":1,"message":"46","line":116,"column":23,"nodeType":"42","messageId":"43","endLine":116,"endColumn":38},{"ruleId":"47","severity":1,"message":"48","line":136,"column":4,"nodeType":"49","endLine":136,"endColumn":6,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":20,"column":30,"nodeType":"53","messageId":"54","endLine":20,"endColumn":31,"fix":"55"},"no-unused-vars","'QuestionCircleOutlined' is defined but never used.","Identifier","unusedVar","'Tag' is defined but never used.","'studentCount' is assigned a value but never used.","'setStudentCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchStudents'. Either include it or remove the dependency array.","ArrayExpression",["56"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"57","text":"58"},{"desc":"59","fix":"60"},[791,802],"\n        \t.","Update the dependencies array to be: [fetchStudents]",{"range":"61","text":"62"},[3424,3426],"[fetchStudents]"]